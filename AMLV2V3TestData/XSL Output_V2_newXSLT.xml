<UANodeSet xmlns="http://opcfoundation.org/UA/2011/03/UANodeSet.xsd" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><!--
			UANodeSet
			=============
			TODOs:
				- avoid duplicate AdditionalInformation
				- Do we need aliases?? 
					- to be clarified with UA -> Miriam
				    - only used ones or standard template set of aliases
					- purpose? drawback				
				- InternalLinks are not translated, yet.
				- Missing translation for UtcTime/DateTime
				- How to use Table 14 in DataTypeMapping v5.0? -> Add mapping to translation table
				- no HasTypeDefinition available if there was no SystemUnitClass (see "BPR_005E_ExternalDataReference_Examples_Jul2016.aml")
				- use correct HasTypeDefinition
				- are spaces allowed in NodeId string as part if the ID? 
				    - to be clarified with AML if spaces are allowed (Part 1) -> Miriam
					- Example in AR APC all Classes AutomationProjectConfigurationRoleClassLib/DeviceItem Attributes
					- necessary for nodeID (BrowseName keeps space), thus deleted
				- are '{GUID}' and 'GUID' equal? -> will be handled as equivalent
				- InterfaceClasses have no specific UA "base structure", but are also of type ObjectType -> how to distinguish between SUC and IC
				- AdditionalInformation is handled as blackbox (no ID)
				- AdditionalInformation AutomationMLVersion
				- from UA to AML: what if we have no "file name" in UA XML (Nodeset has no name) (which element to use as filename)
				- XSL + script for generation of MD5 hash				
				- How to understand the hierarchical elements (incl. HasTypeDefinition)?
			--><NamespaceUris xmlns="">
      <Uri>http://opcfoundation.org/UA/AML/</Uri>
      <Uri>http://opcfoundation.org/UA/AML/MyInstances</Uri>
      <Uri>http://opcfoundation.org/UA/AML/AutomationMLInterfaceClassLib</Uri>
      <Uri>http://opcfoundation.org/UA/AML/AutomationMLBaseRoleClassLib</Uri>
      <Uri>http://opcfoundation.org/UA/AML/SystemUnitClassLib</Uri>
   </NamespaceUris>
   <Models>
      <Model ModelUri="http://opcfoundation.org/UA/AMLLibs/">
         <RequiredModel ModelUri="http://opcfoundation.org/UA/AML/"/>
         <RequiredModel ModelUri="http://opcfoundation.org/UA/" Version="1.04" PublicationDate="2019-05-01T00:00:00Z"/>
      </Model>
   </Models>
   <Aliases>
      <Alias Alias="Boolean">i=1</Alias>
      <Alias Alias="SByte">i=2</Alias>
      <Alias Alias="Byte">i=3</Alias>
      <Alias Alias="Int16">i=4</Alias>
      <Alias Alias="UInt16">i=5</Alias>
      <Alias Alias="Int32">i=6</Alias>
      <Alias Alias="UInt32">i=7</Alias>
      <Alias Alias="Int64">i=8</Alias>
      <Alias Alias="UInt64">i=9</Alias>
      <Alias Alias="Float">i=10</Alias>
      <Alias Alias="Double">i=11</Alias>
      <Alias Alias="DateTime">i=13</Alias>
      <Alias Alias="String">i=12</Alias>
      <Alias Alias="ByteString">i=15</Alias>
      <Alias Alias="Guid">i=14</Alias>
      <Alias Alias="XmlElement">i=16</Alias>
      <Alias Alias="NodeId">i=17</Alias>
      <Alias Alias="LocalizedText">i=21</Alias>
      <Alias Alias="Structure">i=22</Alias>
      <Alias Alias="Number">i=26</Alias>
      <Alias Alias="Integer">i=27</Alias>
      <Alias Alias="UInteger">i=28</Alias>
      <Alias Alias="HasComponent">i=47</Alias>
      <Alias Alias="HasProperty">i=46</Alias>
      <Alias Alias="PropertyType">i=68</Alias>
   </Aliases><!--
			CAEXFile
			===============
			TODOs:
				- is this the correct translation (AMLFile = Object)? -> currently yes
				- do we really need InstanceHierarchies, InterfaceClassLibs and other organizing elements? - -> variable in xslt to include or not, flag in xslt if things were included
				- How to model ExternalReferences?
					- Include external libraries or include parts of the models from an external file (e.g. in case of big models)
					- Option 1: merge external references into AML file before applying XSL transformation (no external references in AML file)
					- Option 2: each externally referenced AML model is translated into a OPC UA namespace named with the ExternalReference alias name ïƒ  each external reference you find inside the AML model is like internal AML reference, but references the other namespace
					- Option 3: keep ExternalReferences as property of CAEXFile object; in case of an external reference inside the model, no linking to another OPC UA node is possible, but information is persisted
					- Preferences: 2-1-3 or 1-2-3/2-1-3 
					- report in AML TAC
			--><UAObject NodeId="ns=2;s=CAEXFile" BrowseName="">
      <DisplayName/>
      <References>
         <Reference ReferenceType="HasTypeDefinition">ns=1;i=1005</Reference><!--InstanceHierarchy--><!--Libraries--><Reference ReferenceType="HasComponent">ns=2;s=CAEXFile_InterfaceClassLibs</Reference>
         <Reference ReferenceType="HasComponent">ns=2;s=CAEXFile_RoleClassLibs</Reference>
         <Reference ReferenceType="HasComponent">ns=2;s=CAEXFile_SystemUnitClassLibs</Reference><!--AdditionalInformation: AdditionalInformation_1--><Reference ReferenceType="HasProperty">ns=2;s=CAEXFile_AdditionalInformation_1</Reference><!--AdditionalInformation: AdditionalInformation_2--><Reference ReferenceType="HasProperty">ns=2;s=CAEXFile_AdditionalInformation_2</Reference><!--TODO: is this correct? (AutomationMLFiles)--><Reference ReferenceType="Organizes" IsForward="false">ns=1;i=5006</Reference>
      </References>
   </UAObject><!--
			AdditionalInformation
			===============
			TODOs:
 				- How to handle multiple AdditionalInformation
					    use first ElementName (or AttributeName) as BrowseName/ID/DisplayName
						define specific SystemUnitClass or RoleClass						
				- do we need an extra UAObjectType for additional information? -> no use content of value as marker
			    - which version (1. or 2.) is the correct translation of an AdditionalInformation?
			--><!--Attribute: .AdditionalInformation_1--><UAVariable xmlns="" NodeId="ns=2;s={}_AdditionalInformation_1" BrowseName="AdditionalInformation_1" ParentNodeId="ns=2;g={}" DataType="String">
      <DisplayName>AdditionalInformation_1</DisplayName>
      <References>
         <Reference ReferenceType="HasTypeDefinition">i=68</Reference>
      </References>
      <Value>
         <String xmlns="http://opcfoundation.org/UA/2008/02/Types.xsd">
            <AdditionalInformation xmlns="" AutomationMLVersion="2.0"/>
         </String>
      </Value>
   </UAVariable><!--Attribute: .AdditionalInformation_2--><UAVariable xmlns="" NodeId="ns=2;s={}_AdditionalInformation_2" BrowseName="AdditionalInformation_2" ParentNodeId="ns=2;g={}" DataType="String">
      <DisplayName>AdditionalInformation_2</DisplayName>
      <References>
         <Reference ReferenceType="HasTypeDefinition">i=68</Reference>
      </References>
      <Value>
         <String xmlns="http://opcfoundation.org/UA/2008/02/Types.xsd">
            <AdditionalInformation xmlns="">
               <WriterName/>
               <WriterID/>
               <WriterVendor/>
               <WriterVendorURL/>
               <WriterVersion/>
               <WriterRelease/>
               <LastWritingDateTime/>
               <WriterProjectTitle/>
               <WriterProjectID/>
            </AdditionalInformation>
         </String>
      </Value>
   </UAVariable><!--
			InstanceHierarchies
			===============
			TODOs:
				- do we need a InstanceHierarchies node? What was the result of the discussion? -> variable in xslt to include or not, flag in xslt if things were included
			    - Complete References
				- Do we need BackwardReferences here?
				- Test child of AutomationMLBaseRole/UABaseObjectType
				- currently only type definition from Libraries are supported -> support HasTypeDefinition from current namespace
			--><!--Collection: CAEXFile.InstanceHierarchies--><!--
			InterfaceClassLibs
			===============
			TODOs:
				- do we need a InterfaceClassLibs node? What was the result of the discussion? -> variable in xslt to include or not, flag in xslt if things were included
			--><!--Collection: CAEXFile.InterfaceClassLibs--><UAObject xmlns="" NodeId="ns=2;s=CAEXFile_InterfaceClassLibs" BrowseName="InterfaceClassLibs" ParentNodeId="ns=2;s=CAEXFile">
      <DisplayName>InterfaceClassLibs</DisplayName>
      <References>
         <Reference ReferenceType="HasComponent" IsForward="false">ns=2;s=CAEXFile</Reference>
         <Reference ReferenceType="HasTypeDefinition">i=61</Reference><!--InterfaceClassLib: AutomationMLInterfaceClassLib--><Reference ReferenceType="HasComponent">ns=3;s=Library</Reference>
      </References>
   </UAObject><!--
			InterfaceClassLib: AutomationMLInterfaceClassLib
			==================================================
			TODOs:
				- Why are the libraries mapped as UAObject in the example file?
				- Do we need BackwardReferences here?
				- How to handle DefaultValues for attributes?
				- What is the corresponding UAObjectType for AutomationMLBaseInterface?
				- How to handle if the parent interface is not specified in the InterfaceClassLibs of the document?
				- Why is there a Reference to RoleClassLib in the Opc.Ua.AMLLibraries.Nodeset2.xml
					<Reference ReferenceType="HasComponent" IsForward="false">ns=2;i=345</Reference> 
		--><UAObject NodeId="ns=3;s=Library" Name="AutomationMLInterfaceClassLib" BrowseName="AutomationMLInterfaceClassLib">
      <DisplayName>AutomationMLInterfaceClassLib</DisplayName>
      <References>
         <Reference ReferenceType="HasTypeDefinition">i=61</Reference>
         <Reference ReferenceType="Organizes" IsForward="false">ns=1;i=5008</Reference>
      </References>
   </UAObject>
   <UAObjectType NodeId="ns=3;s=Order" BrowseName="Order">
      <DisplayName>Order</DisplayName>
      <References>
         <Reference ReferenceType="HasSubType" IsForward="False">ns=12345;s=</Reference>
      </References>
   </UAObjectType>OrderAutomationMLBaseInterfacestate<UAObjectType NodeId="ns=3;s=Port" BrowseName="Port">
      <DisplayName>Port</DisplayName>
      <References>
         <Reference ReferenceType="HasSubType" IsForward="False">ns=12345;s=</Reference><!--Attribute: MinOccur--><Reference xmlns="" ReferenceType="HasProperty">ns=3;s=Port_MinOccur</Reference><!--Attribute: MaxOccur--><Reference xmlns="" ReferenceType="HasProperty">ns=3;s=Port_MaxOccur</Reference>
      </References>
   </UAObjectType>PortAutomationMLBaseInterfacestate<!--Attribute: Port.MinOccur--><UAVariable xmlns="" NodeId="ns=3;s=Port_MinOccur" BrowseName="MinOccur" ParentNodeId="ns=3;s=Port" DataType="UInt32">
      <DisplayName>MinOccur</DisplayName><!--TODO: correct TypeDefinition--><References>
         <Reference ReferenceType="HasTypeDefinition">i=68</Reference>
      </References>
      <Value/>
   </UAVariable><!--Attribute: Port.MaxOccur--><UAVariable xmlns="" NodeId="ns=3;s=Port_MaxOccur" BrowseName="MaxOccur" ParentNodeId="ns=3;s=Port" DataType="UInt32">
      <DisplayName>MaxOccur</DisplayName><!--TODO: correct TypeDefinition--><References>
         <Reference ReferenceType="HasTypeDefinition">i=68</Reference>
      </References>
      <Value/>
   </UAVariable><UAObjectType NodeId="ns=3;s=PPRConnector" BrowseName="PPRConnector">
      <DisplayName>PPRConnector</DisplayName>
      <References>
         <Reference ReferenceType="HasSubType" IsForward="False">ns=12345;s=</Reference>
      </References>
   </UAObjectType>PPRConnectorAutomationMLBaseInterfacestate<UAObjectType NodeId="ns=3;s=ExternalDataConnector" BrowseName="ExternalDataConnector">
      <DisplayName>ExternalDataConnector</DisplayName>
      <References>
         <Reference ReferenceType="HasSubType" IsForward="False">ns=12345;s=</Reference><!--Attribute: MIMEType--><Reference xmlns="" ReferenceType="HasProperty">ns=3;s=ExternalDataConnector_MIMEType</Reference>
      </References>
   </UAObjectType>ExternalDataConnectorAutomationMLBaseInterfacestate<!--Attribute: ExternalDataConnector.MIMEType--><UAVariable xmlns="" NodeId="ns=3;s=ExternalDataConnector_MIMEType" BrowseName="MIMEType" ParentNodeId="ns=3;s=ExternalDataConnector" DataType="String">
      <DisplayName>MIMEType</DisplayName><!--TODO: correct TypeDefinition--><References>
         <Reference ReferenceType="HasTypeDefinition">i=68</Reference>
      </References>
      <Value/>
   </UAVariable><UAObjectType NodeId="ns=3;s=Communication" BrowseName="Communication">
      <DisplayName>Communication</DisplayName>
      <References>
         <Reference ReferenceType="HasSubType" IsForward="False">ns=12345;s=</Reference>
      </References>
   </UAObjectType>CommunicationAutomationMLBaseInterfacestate<!--
			RoleClassLibs
			===============
			TODOs:
				- ...
			--><!--Collection: CAEXFile.RoleClassLibs--><UAObject xmlns="" NodeId="ns=2;s=CAEXFile_RoleClassLibs" BrowseName="RoleClassLibs" ParentNodeId="ns=2;s=CAEXFile">
      <DisplayName>RoleClassLibs</DisplayName>
      <References>
         <Reference ReferenceType="HasComponent" IsForward="false">ns=2;s=CAEXFile</Reference>
         <Reference ReferenceType="HasTypeDefinition">i=61</Reference><!--RoleClassLib: AutomationMLBaseRoleClassLib--><Reference ReferenceType="HasComponent">ns=4;s=Library</Reference>
      </References>
   </UAObject><!--
			RoleClassLib: AutomationMLBaseRoleClassLib
			==================================================
			TODOs:
				- We need an example with ClassInClass definition
				- Do we need BackwardReferences here?
				- Why are this Objects in the example file?
				- What was the correct translation for an RoleClass?
				- Why is the lib modelled as UAObject?
		--><UAObject NodeId="ns=4;s=Library" Name="AutomationMLBaseRoleClassLib" BrowseName="AutomationMLBaseRoleClassLib">
      <DisplayName>AutomationMLBaseRoleClassLib</DisplayName>
      <References>
         <Reference ReferenceType="HasTypeDefinition">i=61</Reference>
         <Reference ReferenceType="Organizes" IsForward="false">ns=1;i=5008</Reference>
      </References>
   </UAObject><UAObjectType NodeId="ns=4;s=Group" BrowseName="Group">
      <DisplayName>Group</DisplayName>
      <References>
         <Reference ReferenceType="HasSubType" IsForward="False">ns=12345;s=</Reference>
      </References>
   </UAObjectType>GroupAutomationMLBaseRolestate<UAObjectType NodeId="ns=4;s=Facet" BrowseName="Facet">
      <DisplayName>Facet</DisplayName>
      <References>
         <Reference ReferenceType="HasSubType" IsForward="False">ns=12345;s=</Reference>
      </References>
   </UAObjectType>FacetAutomationMLBaseRolestate<UAObjectType NodeId="ns=4;s=Resource" BrowseName="Resource">
      <DisplayName>Resource</DisplayName>
      <References>
         <Reference ReferenceType="HasSubType" IsForward="False">ns=12345;s=</Reference>
      </References>
   </UAObjectType>ResourceAutomationMLBaseRolestate<UAObjectType NodeId="ns=4;s=Product" BrowseName="Product">
      <DisplayName>Product</DisplayName>
      <References>
         <Reference ReferenceType="HasSubType" IsForward="False">ns=12345;s=</Reference>
      </References>
   </UAObjectType>ProductAutomationMLBaseRolestate<UAObjectType NodeId="ns=4;s=Process" BrowseName="Process">
      <DisplayName>Process</DisplayName>
      <References>
         <Reference ReferenceType="HasSubType" IsForward="False">ns=12345;s=</Reference>
      </References>
   </UAObjectType>ProcessAutomationMLBaseRolestate<UAObjectType NodeId="ns=4;s=Structure" BrowseName="Structure">
      <DisplayName>Structure</DisplayName>
      <References>
         <Reference ReferenceType="HasSubType" IsForward="False">ns=12345;s=</Reference>
      </References>
   </UAObjectType>StructureAutomationMLBaseRolestate<UAObjectType NodeId="ns=4;s=ExternalData" BrowseName="ExternalData">
      <DisplayName>ExternalData</DisplayName>
      <References>
         <Reference ReferenceType="HasSubType" IsForward="False">ns=12345;s=</Reference>
      </References>
   </UAObjectType>ExternalDataAutomationMLBaseRolestate<!--
			SystemUnitClassLibs
			===============
			TODOs:
				- check all inner elements, e.g. attributes, etc.
			--><!--Collection: CAEXFile.SystemUnitClassLibs--><UAObject xmlns="" NodeId="ns=2;s=CAEXFile_SystemUnitClassLibs" BrowseName="SystemUnitClassLibs" ParentNodeId="ns=2;s=CAEXFile">
      <DisplayName>SystemUnitClassLibs</DisplayName>
      <References>
         <Reference ReferenceType="HasComponent" IsForward="false">ns=2;s=CAEXFile</Reference>
         <Reference ReferenceType="HasTypeDefinition">i=61</Reference><!--SystemUnitClassLib: SystemUnitClassLib--><Reference ReferenceType="HasComponent">ns=5;s=Library</Reference>
      </References>
   </UAObject><!--
			SystemUnitClassLib: SystemUnitClassLib
			==================================================
			TODOs:
				- We need an example with ClassInClass definition.
				- We need an inheritance example.
				- We need an example with multiple SystemUnitClassLibs and cross references.
				- Do we need BackwardReferences here?
				- Why are this Objects in the example file?
				- What was the correct translation for a SystemUnitClass?
				- Why is the lib modelled as UAObject?
		--><UAObject NodeId="ns=5;s=Library" Name="SystemUnitClassLib" BrowseName="SystemUnitClassLib">
      <DisplayName>SystemUnitClassLib</DisplayName>
      <References>
         <Reference ReferenceType="HasTypeDefinition">i=61</Reference>
         <Reference ReferenceType="Organizes" IsForward="false">ns=1;i=5008</Reference>
      </References>
   </UAObject></UANodeSet>
<cleanCAEXFile>
   <AdditionalInformation AutomationMLVersion="2.0"/>
   <AdditionalInformation>
      <WriterName/>
      <WriterID/>
      <WriterVendor/>
      <WriterVendorURL/>
      <WriterVersion/>
      <WriterRelease/>
      <LastWritingDateTime/>
      <WriterProjectTitle/>
      <WriterProjectID/>
   </AdditionalInformation>
   <InterfaceClassLib Name="AutomationMLInterfaceClassLib" ChangeMode="state">
      <InterfaceClass Name="Order" RefBaseClassPath="AutomationMLBaseInterface" ChangeMode="state"/>
      <InterfaceClass Name="Port" RefBaseClassPath="AutomationMLBaseInterface" ChangeMode="state">
         <Constraint Name="AllowedValues" ChangeMode="state">
            <RequiredValue/>
            <RequiredValue/>
            <RequiredValue/>
         </Constraint>
         <Attribute Name="MinOccur" AttributeDataType="xs:unsignedInt" ChangeMode="state"/>
         <Attribute Name="MaxOccur" AttributeDataType="xs:unsignedInt" ChangeMode="state"/>
      </InterfaceClass>
      <InterfaceClass Name="PPRConnector" RefBaseClassPath="AutomationMLBaseInterface" ChangeMode="state"/>
      <InterfaceClass Name="ExternalDataConnector" RefBaseClassPath="AutomationMLBaseInterface" ChangeMode="state">
         <Attribute Name="MIMEType" AttributeDataType="xs:string" ChangeMode="state"/>
      </InterfaceClass>
      <InterfaceClass Name="Communication" RefBaseClassPath="AutomationMLBaseInterface" ChangeMode="state"/>
   </InterfaceClassLib>
   <RoleClassLib Name="AutomationMLBaseRoleClassLib" ChangeMode="state">
      <RoleClass Name="Group" RefBaseClassPath="AutomationMLBaseRole" ChangeMode="state"/>
      <RoleClass Name="Facet" RefBaseClassPath="AutomationMLBaseRole" ChangeMode="state"/>
      <RoleClass Name="Resource" RefBaseClassPath="AutomationMLBaseRole" ChangeMode="state"/>
      <RoleClass Name="Product" RefBaseClassPath="AutomationMLBaseRole" ChangeMode="state"/>
      <RoleClass Name="Process" RefBaseClassPath="AutomationMLBaseRole" ChangeMode="state"/>
      <RoleClass Name="Structure" RefBaseClassPath="AutomationMLBaseRole" ChangeMode="state"/>
      <RoleClass Name="ExternalData" RefBaseClassPath="AutomationMLBaseRole" ChangeMode="state"/>
   </RoleClassLib>
   <SystemUnitClassLib Name="SystemUnitClassLib" ChangeMode="state"/>
</cleanCAEXFile>